openapi: 3.0.0

info:
  title: URL Shortner Application
  version: 'v1'
  contact:
    email: kamal.chouhan84@gmail.com
    name: Kamal Chouhan
  description: <h2>Service Overview</h2><p>Record No of Hits</b> 

tags:
  - name: v1.0
    description: Version 1.0 of the API features and functions

paths:
  /urls:
    get:
      operationId: getUrls
      description: Gets an array of ballots ordered by start date in decending order.
      tags:
        - v1.0
      summary: Returns a list of ballots
      parameters:
        - $ref: "#/components/parameters/Limit"
        - $ref: "#/components/parameters/Offset"
        - $ref: "#/components/parameters/Sort"
        - $ref: "#/components/parameters/SortField"
      responses:
        '200':
          description: Operation Completed Successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UrlsResponse'
        '401':
          description: Unauthorized
        '403':
          description: No permission
        '404':
          description: Ballot not found

    post:
      tags:
        - v1.0
      operationId: addUrl
      summary: Creates and returns a new entity
      security:
        - BearerAuth: []
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UrlsResponse'
        '403':
          description: No permission
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShortnerPost'
  
  /urls/{tinyUrlKey}:
    get:
      parameters:
        - $ref: '#/components/parameters/TinyUrlKey' 
      operationId: getUrl
      description: getRecord by tiny url.
      tags:
        - v1.0
      summary: Returns a meta data of url
      responses:
        '200':
          description: Operation Completed Successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shortner'
        '401':
          description: Unauthorized
        '403':
          description: No permission
        '404':
          description: Ballot not found
          
    patch:
      tags:
        - v1.0
      operationId: updateHits
      summary: Update number of hits on url
      parameters:
        - $ref: '#/components/parameters/TinyUrlKey'    
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shortner'
        '403':
          description: No permission
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Shortner'

           
  /urls/tinyUrlKey/hits:
    get:   
      parameters:
        - $ref: '#/components/parameters/TinyUrlKey' 
        - $ref: "#/components/parameters/StartDate"
        - $ref: "#/components/parameters/EndDate"        
      operationId: getUrlHits
      description: getListOfHits by tiny url.
      tags:
        - v1.0
      summary: Returns a list of counts on particular hits
      responses:
        '200':
          description: Operation Completed Successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UrlHitsResponse'
        '401':
          description: Unauthorized
        '403':
          description: No permission
        '404':
          description: Ballot not found
          
components:

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer

  parameters:

    TinyUrlKey:
      in: path
      name: tinyUrlKey
      required: true
      description: Unique url of key
      schema:
        type: string
        
    Limit:
      name: limit
      in: query
      description: Indicates the maximum number of data to return in a single response
      schema:
        type: integer
        default: 20
        minimum: 1
        maximum: 200
        example: 100

    Offset:
      name: offset
      in: query
      description: Gives the number of data to be skipped
      schema:
        type: integer
        default: 0
        example: 235
    SortField:
      name: sortField
      in: query
      description: the sorting fields , default by date
      required: false
      schema:
        type: string
        example: type
        default: Title ascending and start date descending

    Sort:
      in: query
      name: sortDir
      description: Allows the user to reverse the default direction of the sort
      schema:
        type: string
        enum:
          - asc
          - desc
        default: asc
    StartDate:
      name: startDate
      in: query
      description: filter for items starting on or after the start date.  Default is today - 3 days
      schema:
        $ref: '#/components/schemas/Date'

    EndDate:
      name: endDate
      in: query
      description: filter for ending before or on the end date. Default is today
      schema:
        $ref: '#/components/schemas/Date'

  schemas:

    ShortnerPost:
      description: User supplied portions of the url to be executed
      required:
        - tinyUrlKey
        - host
      type: object
      properties:
        tinyUrlKey:
          type: string
          format: uuid
          example: "short12"
          readOnly: true
        scheme:
          type: string
          example: "http/https"
          readOnly: true
        host:
          type: string
          example: "Domain"
          readOnly: true
        userId:
          type: integer
          format: int32
          example: 12345
          readOnly: true          
        originalUrl:
          type: string
          example: "Domain" 



    Shortner:
      description: User supplied portions of the url to be executed
      required:
        - tinyUrlKey
        - host
      type: object
      properties:
        tinyUrlKey:
          type: string
          format: uuid
          example: "short12"
          readOnly: true
        scheme:
          type: string
          example: "http/https"
          readOnly: true
        host:
          type: string
          example: "Domain"
          readOnly: true
        userId:
          type: integer
          format: int32
          example: 12345
        originalUrl:
          type: string
          example: "Domain" 
        createdOn:
          $ref: '#/components/schemas/Date'
          readOnly: true
        expiresOn:
          $ref: '#/components/schemas/Date'
          readOnly: true

    UrlHits:
      description: Maintain hits based on user
      required:
        - tinyUrlKey
        - host
      type: object
      properties:
        tinyUrlKey:
          type: string
          format: uuid
          example: "short12"
        hits:
          type: integer
          format: int32
          example: 12345          
        createdOn:
          $ref: '#/components/schemas/Date'
          
    Date:
      type: string
      description: Date & time in ISO 8601 UTC date-time format. May be shortened to just a date and will assume 00:00Z as the time if not specified.
      example: "2020-06-05T13:41:45Z"

    UrlHitsResponse:
      description: An array of ballots
      properties:
        statusCode:
          type: integer
          format: int32
          example: 200
        statusMessage:
          type: string
          example: Operation completed successful
        pagination:
          $ref: '#/components/schemas/Pagination'
        errorMessages:
          type: string
          example: For Invalid URL, 
        messages:
          type: string
          example: if the tiny url has already been created for the provided original url, 
        results:
          type: array
          items:
            $ref: '#/components/schemas/UrlHits'    
            
    UrlsResponse:
      description: An array of ballots
      properties:
        statusCode:
          type: integer
          format: int32
          example: 200
        statusMessage:
          type: string
          example: Operation completed successful
        pagination:
          $ref: '#/components/schemas/Pagination'
        errorMessages:
          type: string
          example: For Invalid URL, 
        messages:
          type: string
          example: if the tiny url has already been created for the provided original url, 
        results:
          type: array
          items:
            $ref: '#/components/schemas/Shortner'     
            
    Pagination:
      description: Represents a paginated search result.
      required:
        - limit
        - offset
        - total
      type: object
      properties:
        offset:
          type: integer
          format: int32
          default: 0
          example: 200
          description: The start index of the result set, 0 based
        limit:
          type: integer
          format: int32
          default: 200
          example: 20
          description: Size of the page in the result set
        total:
          type: integer
          format: int32
          example: 31308
          description: Total number of results in result set            
      